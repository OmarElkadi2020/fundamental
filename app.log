2025-06-30 14:24:55,838 - INFO - Running analysis step: idea_generation (Use Cache: True)
gemini-2.5-pro not available or failed to load: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-pro"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 100
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 3
}
]. Falling back to gemini-2.5-flash.
2025-06-30 14:25:47,098 - INFO - Successfully completed analysis step: idea_generation
INFO:     127.0.0.1:0 - "POST /api/run_analysis_step HTTP/1.1" 200 OK
2025-06-30 14:25:47,138 - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 14:25:47,139 - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.2025-06-30 14:49:06,860 - stock_screener - INFO - Starting up application...
2025-06-30 14:54:23,602 - stock_screener - INFO - Shutting down application...
2025-06-30 14:54:25,005 - stock_screener - INFO - Starting up application...
2025-06-30 14:54:30,747 - stock_screener - INFO - Running analysis step: idea_generation (Use Cache: True)
2025-06-30 14:56:00,455 - stock_screener - INFO - Successfully completed analysis step: idea_generation
2025-06-30 14:56:00,483 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 14:56:00,485 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 14:57:45,672 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 14:57:45,674 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 14:58:54,627 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 14:58:54,627 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 14:58:56,703 - stock_screener - INFO - Shutting down application...
2025-06-30 14:58:58,144 - stock_screener - INFO - Starting up application...
2025-06-30 14:59:01,211 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 14:59:01,211 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:00:01,057 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:00:01,058 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:00:53,505 - stock_screener - INFO - Shutting down application...
2025-06-30 15:00:56,022 - stock_screener - INFO - Starting up application...
2025-06-30 15:01:04,205 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:01:04,206 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:02:36,608 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:02:36,609 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:02:51,960 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:02:51,962 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:02:54,294 - stock_screener - INFO - Shutting down application...
2025-06-30 15:02:56,470 - stock_screener - INFO - Starting up application...
2025-06-30 15:02:58,067 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:02:58,068 - stock_screener - ERROR - An error occurred during analysis step categorization_triage: 400: companies_list is required for categorization_triage step.
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 92, in run_analysis_step
    raise HTTPException(status_code=400, detail="companies_list is required for categorization_triage step.")
fastapi.exceptions.HTTPException: 400: companies_list is required for categorization_triage step.
2025-06-30 15:08:34,129 - stock_screener - INFO - Shutting down application...
2025-06-30 15:08:44,030 - stock_screener - INFO - Starting up application...
2025-06-30 15:08:52,989 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 15:09:52,887 - stock_screener - INFO - Successfully completed analysis step: categorization_triage
2025-06-30 15:19:55,565 - stock_screener - INFO - Shutting down application...
2025-06-30 15:27:36,770 - stock_screener - INFO - Starting up application...
2025-06-30 15:27:41,582 - stock_screener - INFO - Running analysis step: idea_generation (Use Cache: True)
2025-06-30 15:27:41,583 - stock_screener - ERROR - An error occurred during analysis step idea_generation: Invalid format specifier
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 88, in run_analysis_step
    result = ai_service.generate_ideas_scuttlebutt(count=count)
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 47, in generate_ideas_scuttlebutt
    prompt = f"""
ValueError: Invalid format specifier
2025-06-30 15:30:53,683 - stock_screener - INFO - Shutting down application...
2025-06-30 15:46:42,684 - stock_screener - INFO - Starting up application...
2025-06-30 15:46:57,931 - stock_screener - INFO - Running analysis step: idea_generation (Use Cache: True)
2025-06-30 15:49:09,209 - stock_screener - INFO - Successfully completed analysis step: idea_generation
2025-06-30 15:54:16,601 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 16:00:53,629 - stock_screener - INFO - Starting up application...
2025-06-30 16:00:58,961 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: True)
2025-06-30 16:02:25,769 - stock_screener - INFO - Successfully completed analysis step: categorization_triage
2025-06-30 16:02:25,809 - stock_screener - INFO - Running analysis step: vetting_fast_growers (Use Cache: True)
2025-06-30 16:03:34,104 - stock_screener - INFO - Successfully completed analysis step: vetting_fast_growers
2025-06-30 16:03:34,140 - stock_screener - INFO - Running analysis step: vetting_turnarounds (Use Cache: True)
2025-06-30 16:04:19,231 - stock_screener - INFO - Successfully completed analysis step: vetting_turnarounds
2025-06-30 16:04:19,264 - stock_screener - INFO - Running analysis step: sentiment_analysis (Use Cache: True)
2025-06-30 16:04:19,264 - stock_screener - ERROR - An error occurred during analysis step sentiment_analysis: Invalid format specifier
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 108, in run_analysis_step
    result = ai_service.analyze_sentiment(stocks_list=stocks_list)
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 139, in analyze_sentiment
    prompt = f"""
ValueError: Invalid format specifier
2025-06-30 16:06:40,929 - stock_screener - INFO - Shutting down application...
2025-06-30 16:10:38,740 - stock_screener - INFO - Starting up application...
2025-06-30 16:10:46,771 - stock_screener - INFO - Running analysis step: sentiment_analysis (Use Cache: True)
2025-06-30 16:10:46,771 - stock_screener - ERROR - An error occurred during analysis step sentiment_analysis: Invalid format specifier
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 108, in run_analysis_step
    result = ai_service.analyze_sentiment(stocks_list=stocks_list)
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 139, in analyze_sentiment
    prompt = f"""
ValueError: Invalid format specifier
2025-06-30 16:11:23,379 - stock_screener - INFO - Shutting down application...
2025-06-30 16:11:24,864 - stock_screener - INFO - Starting up application...
2025-06-30 16:11:27,075 - stock_screener - INFO - Running analysis step: sentiment_analysis (Use Cache: True)
2025-06-30 16:12:08,329 - stock_screener - INFO - Successfully completed analysis step: sentiment_analysis
2025-06-30 16:12:08,548 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: True)
2025-06-30 16:12:08,548 - stock_screener - ERROR - An error occurred during analysis step final_selection_synthesis: Invalid format specifier
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 115, in run_analysis_step
    result = ai_service.final_selection_synthesis(
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 158, in final_selection_synthesis
    prompt = f"""
ValueError: Invalid format specifier
2025-06-30 16:12:31,271 - stock_screener - INFO - Shutting down application...
2025-06-30 16:12:34,118 - stock_screener - INFO - Starting up application...
2025-06-30 16:12:35,679 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: True)
2025-06-30 16:13:05,636 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:20:28,704 - stock_screener - INFO - Running analysis step: sentiment_analysis (Use Cache: False)
2025-06-30 16:21:13,316 - stock_screener - INFO - Successfully completed analysis step: sentiment_analysis
2025-06-30 16:21:13,440 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:21:35,948 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:22:01,681 - stock_screener - INFO - Shutting down application...
2025-06-30 16:25:18,198 - stock_screener - INFO - Starting up application...
2025-06-30 16:25:26,385 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:25:26,385 - stock_screener - ERROR - An error occurred during analysis step final_selection_synthesis: string indices must be integers
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 115, in run_analysis_step
    result = ai_service.final_selection_synthesis(
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 155, in final_selection_synthesis
    sentiment_data_for_prompt = {item['ticker']: {'score': item['sentiment_score'], 'summary': item['summary']} for item in sentiment_analysis_results}
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 155, in <dictcomp>
    sentiment_data_for_prompt = {item['ticker']: {'score': item['sentiment_score'], 'summary': item['summary']} for item in sentiment_analysis_results}
TypeError: string indices must be integers
2025-06-30 16:26:16,435 - stock_screener - INFO - Shutting down application...
2025-06-30 16:26:17,511 - stock_screener - INFO - Starting up application...
2025-06-30 16:26:23,791 - stock_screener - INFO - Starting up application...
2025-06-30 16:26:26,507 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:26:26,508 - stock_screener - ERROR - An error occurred during analysis step final_selection_synthesis: string indices must be integers
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 115, in run_analysis_step
    result = ai_service.final_selection_synthesis(
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 155, in final_selection_synthesis
    sentiment_data_for_prompt = {item['ticker']: {'score': item['sentiment_score'], 'summary': item['summary']} for item in sentiment_analysis_results['content']}
  File "/home/omar/projects/fundamental/backend/core/use_cases/ai_evaluation_service.py", line 155, in <dictcomp>
    sentiment_data_for_prompt = {item['ticker']: {'score': item['sentiment_score'], 'summary': item['summary']} for item in sentiment_analysis_results['content']}
TypeError: string indices must be integers
2025-06-30 16:26:57,560 - stock_screener - INFO - Shutting down application...
2025-06-30 16:26:58,830 - stock_screener - INFO - Starting up application...
2025-06-30 16:27:00,730 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:27:07,317 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:27:07,706 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:27:13,362 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:29:41,943 - stock_screener - INFO - Shutting down application...
2025-06-30 16:30:19,455 - stock_screener - INFO - Starting up application...
2025-06-30 16:30:21,666 - stock_screener - INFO - Shutting down application...
2025-06-30 16:33:53,339 - stock_screener - INFO - Starting up application...
2025-06-30 16:34:04,895 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:34:05,525 - stock_screener - WARNING - gemini-2.5-pro not available or failed to load: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-pro"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 100
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 54
}
]. Falling back to gemini-2.5-flash.
2025-06-30 16:34:50,317 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 16:34:50,323 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:43:01,793 - stock_screener - INFO - Shutting down application...
2025-06-30 16:43:36,772 - stock_screener - INFO - Starting up application...
2025-06-30 16:51:57,801 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 16:51:58,331 - stock_screener - WARNING - gemini-2.5-pro not available or failed to load: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-pro"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 100
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 1
}
]. Falling back to gemini-2.5-flash.
2025-06-30 16:52:41,679 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 16:52:41,684 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 16:55:50,082 - stock_screener - INFO - Shutting down application...
2025-06-30 16:55:52,293 - stock_screener - INFO - Starting up application...
2025-06-30 17:03:31,389 - stock_screener - INFO - Shutting down application...
2025-06-30 17:03:34,207 - stock_screener - INFO - Starting up application...
2025-06-30 17:03:44,603 - stock_screener - ERROR - Error fetching stock detail for NVDA: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:03:46,973 - stock_screener - ERROR - Error fetching stock detail for LLY: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:03:49,151 - stock_screener - ERROR - Error fetching stock detail for NVO: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:03:51,587 - stock_screener - ERROR - Error fetching stock detail for SMCI: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:03:52,208 - stock_screener - ERROR - Error fetching stock detail for NVDA: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:03:54,220 - stock_screener - ERROR - Error fetching stock detail for CRWD: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:04:29,708 - stock_screener - INFO - Shutting down application...
2025-06-30 17:04:32,093 - stock_screener - INFO - Starting up application...
2025-06-30 17:04:36,871 - stock_screener - ERROR - Error fetching stock detail for NVDA: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:04:38,760 - stock_screener - ERROR - Error fetching stock detail for LLY: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:04:42,110 - stock_screener - ERROR - Error fetching stock detail for LLY: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:06:39,640 - stock_screener - ERROR - Error fetching stock detail for LLY: Object of type DataFrame is not JSON serializable
Traceback (most recent call last):
  File "/home/omar/projects/fundamental/app.py", line 76, in get_stock_detail
    return JSONResponse(content=data)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 182, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 45, in __init__
    self.body = self.render(content)
  File "/home/omar/.local/lib/python3.10/site-packages/starlette/responses.py", line 185, in render
    return json.dumps(
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/omar/.local/lib/python3.10/site-packages/frozendict/__init__.py", line 32, in default
    return BaseJsonEncoder.default(
  File "/usr/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2025-06-30 17:06:43,062 - stock_screener - INFO - Shutting down application...
2025-06-30 17:06:45,445 - stock_screener - INFO - Starting up application...
2025-06-30 17:10:08,749 - stock_screener - INFO - Shutting down application...
2025-06-30 17:10:12,005 - stock_screener - INFO - Starting up application...
2025-06-30 17:23:46,909 - stock_screener - INFO - Shutting down application...
2025-06-30 17:23:49,805 - stock_screener - INFO - Starting up application...
2025-06-30 17:25:20,583 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:25:20,584 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:25:20,595 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:25:41,654 - stock_screener - INFO - Shutting down application...
2025-06-30 17:25:44,104 - stock_screener - INFO - Starting up application...
2025-06-30 17:25:50,246 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:25:50,246 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:25:50,265 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:26:38,183 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:26:38,183 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:26:38,199 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:28:13,431 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:28:13,435 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:28:13,469 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:28:44,688 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:28:44,689 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:28:44,724 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:32:59,799 - stock_screener - ERROR - Error decoding fast_growers_vetting from cache.
2025-06-30 17:32:59,800 - stock_screener - ERROR - Error decoding turnarounds_vetting from cache.
2025-06-30 17:32:59,812 - stock_screener - ERROR - Error decoding sentiment_analysis_data from cache.
2025-06-30 17:34:38,336 - stock_screener - INFO - Shutting down application...
2025-06-30 17:34:42,264 - stock_screener - INFO - Starting up application...
2025-06-30 17:45:56,822 - stock_screener - INFO - Shutting down application...
2025-06-30 17:45:59,925 - stock_screener - INFO - Starting up application...
2025-06-30 17:46:14,186 - stock_screener - INFO - Shutting down application...
2025-06-30 17:46:16,450 - stock_screener - INFO - Starting up application...
2025-06-30 17:47:38,413 - stock_screener - INFO - Shutting down application...
2025-06-30 17:47:40,540 - stock_screener - INFO - Starting up application...
2025-06-30 17:48:08,688 - stock_screener - INFO - Running analysis step: sentiment_analysis (Use Cache: False)
2025-06-30 17:48:09,405 - stock_screener - WARNING - gemini-2.5-pro not available or failed to load: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-pro"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 100
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 50
}
]. Falling back to gemini-2.5-flash.
2025-06-30 17:48:45,455 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 17:48:45,460 - stock_screener - INFO - Successfully completed analysis step: sentiment_analysis
2025-06-30 17:48:45,616 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 17:49:16,993 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 17:49:16,999 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 17:54:15,143 - stock_screener - INFO - Shutting down application...
2025-06-30 17:54:18,094 - stock_screener - INFO - Starting up application...
2025-06-30 18:00:06,540 - stock_screener - INFO - Shutting down application...
2025-06-30 18:00:08,291 - stock_screener - INFO - Starting up application...
2025-06-30 18:00:10,357 - stock_screener - INFO - Running analysis step: vetting_fast_growers (Use Cache: False)
2025-06-30 18:00:10,918 - stock_screener - WARNING - gemini-2.5-pro not available or failed to load: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-pro"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 100
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 49
}
]. Falling back to gemini-2.5-flash.
2025-06-30 18:01:22,819 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 18:01:22,826 - stock_screener - INFO - Successfully completed analysis step: vetting_fast_growers
2025-06-30 18:01:22,874 - stock_screener - INFO - Running analysis step: vetting_turnarounds (Use Cache: False)
2025-06-30 18:02:05,916 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 18:02:05,921 - stock_screener - INFO - Successfully completed analysis step: vetting_turnarounds
2025-06-30 18:02:06,107 - stock_screener - INFO - Running analysis step: final_selection_synthesis (Use Cache: False)
2025-06-30 18:03:00,516 - stock_screener - WARNING - Warning: AI response is not valid JSON. Returning raw text.
2025-06-30 18:03:00,524 - stock_screener - INFO - Successfully completed analysis step: final_selection_synthesis
2025-06-30 18:09:34,668 - stock_screener - INFO - Shutting down application...
2025-06-30 18:09:36,626 - stock_screener - INFO - Starting up application...
2025-06-30 18:11:34,293 - stock_screener - INFO - Shutting down application...
2025-06-30 18:11:44,337 - stock_screener - INFO - Starting up application...
2025-06-30 18:12:17,059 - stock_screener - INFO - Running analysis step: categorization_triage (Use Cache: False)
2025-06-30 18:13:40,655 - stock_screener - INFO - Successfully completed analysis step: categorization_triage
2025-06-30 18:15:31,096 - stock_screener - INFO - Shutting down application...
2025-06-30 18:15:32,999 - stock_screener - INFO - Starting up application...
